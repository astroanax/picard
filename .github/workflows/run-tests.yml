on:
  workflow_call:
    inputs:
      runs-on:
        description: Platform to execute on
        required: true
        type: string
      python-version:
        description: Python version to build with
        required: true
        type: string

jobs:
  test-latest:
    runs-on: ${{ inputs.runs-on }}
    env:
      CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ inputs.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Check coding style
      run: |
        pip install flake8 "isort<5"
        flake8 picard test --count --show-source --statistics
        isort --check-only --diff --recursive picard test
    - name: Test with pytest
      if: always()
      run: |
        pip install pytest pytest-randomly pytest-cov
        pytest --verbose --cov=picard --cov-report xml:coverage.xml test
    - name: Test python-libdiscid (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install libdiscid-dev
        python -c "from picard.disc import discid_version; print(discid_version)"
        pytest --verbose test/test_disc.py
        pip install python-libdiscid
        python -c "from picard.disc import discid_version; print(discid_version)"
        pytest --verbose test/test_disc.py
    - name: Submit code coverage to Codacy
      if: env.CODACY_PROJECT_TOKEN
      run: |
        pip install codacy-coverage
        python-codacy-coverage -r coverage.xml
